export declare const typeDefs = "\n  scalar DateTime\n  scalar JSON\n  scalar Upload\n\n  # Core User Types\n  type User {\n    id: ID!\n    email: String!\n    full_name: String!\n    avatar_url: String\n    phone_number: String\n    bio: String\n    location: Location\n    address: String\n    city: String\n    state: String\n    country: String!\n    postal_code: String\n    rating: Float!\n    total_reviews: Int!\n    verified: Boolean!\n    points: Int!\n    referral_code: String\n    referred_by: ID\n    stripe_account_id: String\n    stripe_onboarded: Boolean!\n    stripe_customer_id: String\n    identity_verified: Boolean!\n    role: UserRole!\n    created_at: DateTime!\n    updated_at: DateTime!\n    \n    # Related data (resolved via DataLoader)\n    listings(filter: ListingFilter, sort: ListingSort, first: Int, after: String): ListingConnection\n    bookings_as_renter(filter: BookingFilter, sort: BookingSort, first: Int, after: String): BookingConnection\n    bookings_as_owner(filter: BookingFilter, sort: BookingSort, first: Int, after: String): BookingConnection\n    reviews_given(first: Int, after: String): ReviewConnection\n    reviews_received(first: Int, after: String): ReviewConnection\n    favorites(first: Int, after: String): FavoriteConnection\n    conversations(first: Int, after: String): ConversationConnection\n    notifications(unread_only: Boolean, first: Int, after: String): NotificationConnection\n  }\n\n  enum UserRole {\n    USER\n    ADMIN\n  }\n\n  type Location {\n    coordinates: [Float!]! # [longitude, latitude]\n    address: String\n    city: String\n    state: String\n    country: String\n    postal_code: String\n  }\n\n  # Listing Types\n  type Listing {\n    id: ID!\n    title: String!\n    description: String!\n    category: String!\n    category_id: ID\n    price_per_day: Float!\n    price_hourly: Float\n    price_weekly: Float\n    currency: String!\n    location: Location!\n    address: String!\n    city: String!\n    state: String\n    country: String!\n    postal_code: String\n    images: [String!]!\n    features: [String!]!\n    condition: ItemCondition!\n    brand: String\n    model: String\n    year: Int\n    deposit: Float\n    insurance_enabled: Boolean!\n    delivery_available: Boolean!\n    pickup_available: Boolean!\n    is_active: Boolean!\n    available_from: DateTime\n    available_to: DateTime\n    owner_id: ID!\n    view_count: Int!\n    favorite_count: Int!\n    booking_count: Int!\n    rating: Float!\n    review_count: Int!\n    approval_status: ApprovalStatus!\n    approved_by: ID\n    approved_at: DateTime\n    rejection_reason: String\n    created_at: DateTime!\n    updated_at: DateTime!\n    \n    # Related data\n    owner: User!\n    category_info: Category\n    reviews(first: Int, after: String): ReviewConnection\n    bookings(filter: BookingFilter, first: Int, after: String): BookingConnection\n    availability(from: DateTime, to: DateTime): [ListingAvailability!]!\n    photos: [ListingPhoto!]!\n    is_favorited_by_user(user_id: ID): Boolean\n  }\n\n  enum ItemCondition {\n    NEW\n    LIKE_NEW\n    GOOD\n    FAIR\n    POOR\n  }\n\n  enum ApprovalStatus {\n    PENDING\n    APPROVED\n    REJECTED\n  }\n\n  type ListingPhoto {\n    id: ID!\n    listing_id: ID!\n    url: String!\n    thumbnail_url: String\n    alt_text: String\n    order_index: Int!\n    created_at: DateTime!\n  }\n\n  type ListingAvailability {\n    id: ID!\n    listing_id: ID!\n    date: DateTime!\n    is_available: Boolean!\n    created_at: DateTime!\n  }\n\n  # Booking Types\n  type Booking {\n    id: ID!\n    listing_id: ID!\n    renter_id: ID!\n    owner_id: ID!\n    start_date: DateTime!\n    end_date: DateTime!\n    total_days: Int!\n    duration_days: Int\n    price_per_day: Float!\n    subtotal: Float!\n    service_fee: Float!\n    platform_fee: Float!\n    insurance_fee: Float!\n    deposit_amount: Float!\n    total_amount: Float!\n    delivery_method: DeliveryMethod\n    delivery_address: String\n    \n    # Status fields\n    status: BookingStatus!\n    payment_status: PaymentStatus!\n    deposit_status: DepositStatus!\n    \n    # Confirmation fields\n    payer_confirmed: Boolean!\n    owner_confirmed: Boolean!\n    pickup_confirmed_by_renter: Boolean!\n    pickup_confirmed_by_owner: Boolean!\n    pickup_confirmed_at: DateTime\n    return_confirmed_by_renter: Boolean!\n    return_confirmed_by_owner: Boolean!\n    return_confirmed_at: DateTime\n    owner_receipt_confirmed_at: DateTime\n    \n    # Messages and notes\n    renter_message: String\n    owner_response: String\n    pickup_notes: String\n    return_notes: String\n    owner_receipt_notes: String\n    pickup_instructions: String\n    return_instructions: String\n    \n    # Location and logistics\n    pickup_location: String\n    return_location: String\n    \n    # Condition tracking\n    condition_before: String\n    condition_after: String\n    final_condition: String\n    damage_report: String\n    has_issues: Boolean!\n    \n    # Images\n    pickup_images: JSON\n    return_images: JSON\n    \n    # Stripe integration\n    payment_intent_id: String\n    stripe_payment_intent_id: String\n    stripe_transfer_id: String\n    stripe_session_id: String\n    paid_at: DateTime\n    payment_date: DateTime\n    \n    # Admin controls\n    admin_released_by: ID\n    admin_released_at: DateTime\n    \n    created_at: DateTime!\n    updated_at: DateTime!\n    \n    # Related data\n    listing: Listing!\n    renter: User!\n    owner: User!\n    reviews: [Review!]!\n    payments: [Payment!]!\n    conversation: Conversation\n    can_review: Boolean!\n    can_cancel: Boolean!\n    can_confirm_pickup: Boolean!\n    can_confirm_return: Boolean!\n  }\n\n  enum BookingStatus {\n    PENDING\n    CONFIRMED\n    IN_PROGRESS\n    COMPLETED\n    CANCELLED\n    DISPUTED\n    PAYMENT_REQUIRED\n    RETURN_PENDING\n  }\n\n  enum PaymentStatus {\n    PENDING\n    PROCESSING\n    SUCCEEDED\n    FAILED\n    REFUNDED\n  }\n\n  enum DepositStatus {\n    HELD\n    REFUNDED\n    DEDUCTED\n  }\n\n  enum DeliveryMethod {\n    PICKUP\n    DELIVERY\n  }\n\n  # Review Types\n  type Review {\n    id: ID!\n    booking_id: ID!\n    reviewer_id: ID!\n    reviewee_id: ID!\n    rating: Int! # 1-5\n    comment: String\n    type: ReviewType!\n    created_at: DateTime!\n    updated_at: DateTime!\n    \n    # Related data\n    booking: Booking!\n    reviewer: User!\n    reviewee: User!\n  }\n\n  enum ReviewType {\n    RENTER_TO_OWNER\n    OWNER_TO_RENTER\n  }\n\n  # Payment Types\n  type Payment {\n    id: ID!\n    booking_id: ID!\n    stripe_payment_intent_id: String!\n    stripe_client_secret: String\n    amount: Float!\n    currency: String!\n    status: PaymentStatus!\n    payment_method_id: String\n    payment_method_type: String\n    platform_fee: Float!\n    stripe_fee: Float!\n    net_amount: Float\n    payout_id: String\n    payout_date: DateTime\n    refund_id: String\n    refund_amount: Float\n    refund_reason: String\n    refunded_at: DateTime\n    metadata: JSON\n    created_at: DateTime!\n    updated_at: DateTime!\n    \n    # Related data\n    booking: Booking!\n  }\n\n  # Messaging Types\n  type Message {\n    id: ID!\n    sender_id: ID!\n    receiver_id: ID!\n    conversation_id: ID\n    booking_id: ID\n    content: String!\n    message_type: MessageType!\n    metadata: JSON\n    is_read: Boolean!\n    read_at: DateTime\n    created_at: DateTime!\n    updated_at: DateTime!\n    \n    # Related data\n    sender: User!\n    receiver: User!\n    conversation: Conversation\n    booking: Booking\n  }\n\n  enum MessageType {\n    TEXT\n    IMAGE\n    FILE\n  }\n\n  type Conversation {\n    id: ID!\n    participants: [ID!]!\n    booking_id: ID\n    listing_id: ID\n    last_message: String\n    last_message_at: DateTime\n    created_at: DateTime!\n    updated_at: DateTime!\n    \n    # Related data\n    booking: Booking\n    listing: Listing\n    messages(first: Int, after: String): MessageConnection!\n    participants_info: [User!]!\n    unread_count(user_id: ID!): Int!\n  }\n\n  # Category Types\n  type Category {\n    id: ID!\n    name: String!\n    icon: String\n    description: String\n    created_at: DateTime!\n    \n    # Related data\n    listings_count: Int!\n    listings(filter: ListingFilter, first: Int, after: String): ListingConnection\n  }\n\n  # Favorite Types\n  type Favorite {\n    id: ID!\n    user_id: ID!\n    listing_id: ID!\n    created_at: DateTime!\n    \n    # Related data\n    user: User!\n    listing: Listing!\n  }\n\n  # Notification Types\n  type Notification {\n    id: ID!\n    user_id: ID!\n    title: String!\n    message: String!\n    type: NotificationType!\n    related_id: ID\n    is_read: Boolean!\n    created_at: DateTime!\n    updated_at: DateTime!\n    \n    # Related data\n    user: User!\n  }\n\n  enum NotificationType {\n    BOOKING\n    MESSAGE\n    PAYMENT\n    LISTING\n    SYSTEM\n  }\n\n  # Incentive Types\n  type Incentive {\n    id: ID!\n    user_id: ID!\n    booking_id: ID\n    action: IncentiveAction!\n    points: Int!\n    description: String\n    created_at: DateTime!\n    \n    # Related data\n    user: User!\n    booking: Booking\n  }\n\n  enum IncentiveAction {\n    FIRST_RENTAL\n    REFERRAL\n    REVIEW\n    MILESTONE\n  }\n\n  # Connection Types for Pagination\n  type PageInfo {\n    hasNextPage: Boolean!\n    hasPreviousPage: Boolean!\n    startCursor: String\n    endCursor: String\n  }\n\n  type ListingEdge {\n    node: Listing!\n    cursor: String!\n  }\n\n  type ListingConnection {\n    edges: [ListingEdge!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n  }\n\n  type BookingEdge {\n    node: Booking!\n    cursor: String!\n  }\n\n  type BookingConnection {\n    edges: [BookingEdge!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n  }\n\n  type ReviewEdge {\n    node: Review!\n    cursor: String!\n  }\n\n  type ReviewConnection {\n    edges: [ReviewEdge!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n  }\n\n  type MessageEdge {\n    node: Message!\n    cursor: String!\n  }\n\n  type MessageConnection {\n    edges: [MessageEdge!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n  }\n\n  type ConversationEdge {\n    node: Conversation!\n    cursor: String!\n  }\n\n  type ConversationConnection {\n    edges: [ConversationEdge!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n  }\n\n  type NotificationEdge {\n    node: Notification!\n    cursor: String!\n  }\n\n  type NotificationConnection {\n    edges: [NotificationEdge!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n  }\n\n  type FavoriteEdge {\n    node: Favorite!\n    cursor: String!\n  }\n\n  type FavoriteConnection {\n    edges: [FavoriteEdge!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n  }\n\n  # Dashboard Types\n  type UserStats {\n    active_listings: Int!\n    total_bookings_as_owner: Int!\n    total_bookings_as_renter: Int!\n    total_earnings: Float!\n    pending_payouts: Float!\n    unread_messages: Int!\n    unread_notifications: Int!\n  }\n\n  type UserDashboard {\n    user: User!\n    stats: UserStats!\n    recent_bookings: [Booking!]!\n    recent_messages: [Message!]!\n    pending_reviews: [Booking!]!\n  }\n\n  type AdminStats {\n    total_users: Int!\n    total_listings: Int!\n    total_bookings: Int!\n    total_revenue: Float!\n    pending_approvals: Int!\n    active_disputes: Int!\n  }\n\n  type RevenueByMonth {\n    month: String!\n    revenue: Float!\n    bookings: Int!\n  }\n\n  type AdminDashboard {\n    stats: AdminStats!\n    recent_signups: [User!]!\n    pending_listings: [Listing!]!\n    recent_bookings: [Booking!]!\n    revenue_by_month: [RevenueByMonth!]!\n  }\n\n  # Search Types\n  type SearchFacet {\n    name: String!\n    count: Int!\n  }\n\n  type PriceRangeFacet {\n    range: String!\n    count: Int!\n  }\n\n  type LocationFacet {\n    city: String!\n    state: String!\n    count: Int!\n  }\n\n  type SearchFacets {\n    categories: [SearchFacet!]!\n    price_ranges: [PriceRangeFacet!]!\n    conditions: [SearchFacet!]!\n    locations: [LocationFacet!]!\n  }\n\n  type SearchResult {\n    listings: [Listing!]!\n    total_count: Int!\n    facets: SearchFacets!\n  }\n\n  # Input Types for Filters and Sorting\n  input LocationInput {\n    coordinates: [Float!]! # [longitude, latitude]\n    radius_km: Float\n  }\n\n  input ListingFilter {\n    category: String\n    category_id: ID\n    min_price: Float\n    max_price: Float\n    city: String\n    state: String\n    country: String\n    condition: [ItemCondition!]\n    delivery_available: Boolean\n    pickup_available: Boolean\n    insurance_enabled: Boolean\n    available_from: DateTime\n    available_to: DateTime\n    search: String\n    owner_id: ID\n    is_active: Boolean\n    approval_status: ApprovalStatus\n    features: [String!]\n    brand: String\n    near_location: LocationInput\n  }\n\n  input ListingSort {\n    field: ListingSortField!\n    direction: SortDirection!\n  }\n\n  enum ListingSortField {\n    CREATED_AT\n    UPDATED_AT\n    PRICE_PER_DAY\n    RATING\n    VIEW_COUNT\n    DISTANCE\n  }\n\n  enum SortDirection {\n    ASC\n    DESC\n  }\n\n  input BookingFilter {\n    status: [BookingStatus!]\n    payment_status: [PaymentStatus!]\n    renter_id: ID\n    owner_id: ID\n    listing_id: ID\n    start_date_from: DateTime\n    start_date_to: DateTime\n    end_date_from: DateTime\n    end_date_to: DateTime\n  }\n\n  input BookingSort {\n    field: BookingSortField!\n    direction: SortDirection!\n  }\n\n  enum BookingSortField {\n    CREATED_AT\n    UPDATED_AT\n    START_DATE\n    END_DATE\n    TOTAL_AMOUNT\n  }\n\n  input SearchInput {\n    query: String\n    filters: ListingFilter\n    sort: ListingSort\n    first: Int\n    after: String\n  }\n\n  # Input Types for Mutations\n  input CreateListingInput {\n    title: String!\n    description: String!\n    category: String!\n    category_id: ID\n    price_per_day: Float!\n    price_hourly: Float\n    price_weekly: Float\n    currency: String\n    address: String!\n    city: String!\n    state: String\n    country: String\n    postal_code: String\n    images: [String!]!\n    features: [String!]\n    condition: ItemCondition!\n    brand: String\n    model: String\n    year: Int\n    deposit: Float\n    insurance_enabled: Boolean\n    delivery_available: Boolean\n    pickup_available: Boolean\n    available_from: DateTime\n    available_to: DateTime\n  }\n\n  input UpdateListingInput {\n    title: String\n    description: String\n    category: String\n    price_per_day: Float\n    price_hourly: Float\n    price_weekly: Float\n    images: [String!]\n    features: [String!]\n    condition: ItemCondition\n    brand: String\n    model: String\n    year: Int\n    deposit: Float\n    insurance_enabled: Boolean\n    delivery_available: Boolean\n    pickup_available: Boolean\n    available_from: DateTime\n    available_to: DateTime\n    is_active: Boolean\n  }\n\n  input CreateBookingInput {\n    listing_id: ID!\n    start_date: DateTime!\n    end_date: DateTime!\n    delivery_method: DeliveryMethod\n    delivery_address: String\n    renter_message: String\n    pickup_location: String\n    return_location: String\n  }\n\n  input CreateReviewInput {\n    booking_id: ID!\n    reviewee_id: ID!\n    rating: Int!\n    comment: String\n    type: ReviewType!\n  }\n\n  input SendMessageInput {\n    receiver_id: ID!\n    conversation_id: ID\n    booking_id: ID\n    content: String!\n    message_type: MessageType\n    metadata: JSON\n  }\n\n  input UpdateProfileInput {\n    full_name: String\n    avatar_url: String\n    phone_number: String\n    bio: String\n    address: String\n    city: String\n    state: String\n    postal_code: String\n  }\n\n  # Response Types for Mutations\n  interface MutationResponse {\n    success: Boolean!\n    message: String\n    errors: [String!]\n  }\n\n  type CreateListingResponse implements MutationResponse {\n    success: Boolean!\n    message: String\n    errors: [String!]\n    listing: Listing\n  }\n\n  type CreateBookingResponse implements MutationResponse {\n    success: Boolean!\n    message: String\n    errors: [String!]\n    booking: Booking\n  }\n\n  type CreateReviewResponse implements MutationResponse {\n    success: Boolean!\n    message: String\n    errors: [String!]\n    review: Review\n  }\n\n  type SendMessageResponse implements MutationResponse {\n    success: Boolean!\n    message: String\n    errors: [String!]\n    message_sent: Message\n  }\n\n  type UpdateProfileResponse implements MutationResponse {\n    success: Boolean!\n    message: String\n    errors: [String!]\n    user: User\n  }\n\n  # Root Query Type\n  type Query {\n    # Test query\n    hello: String!\n    \n    # User queries\n    me: User\n    user(id: ID!): User\n    users(filter: String, first: Int, after: String): [User!]!\n    \n    # Listing queries\n    listing(id: ID!): Listing\n    listings(filter: ListingFilter, sort: ListingSort, first: Int, after: String): ListingConnection!\n    featured_listings(limit: Int): [Listing!]!\n    nearby_listings(location: LocationInput!, radius_km: Float, limit: Int): [Listing!]!\n    \n    # Search\n    search(input: SearchInput!): SearchResult!\n    \n    # Booking queries\n    booking(id: ID!): Booking\n    bookings(filter: BookingFilter, sort: BookingSort, first: Int, after: String): BookingConnection!\n    \n    # Review queries\n    reviews(listing_id: ID, user_id: ID, first: Int, after: String): ReviewConnection!\n    \n    # Message queries\n    conversation(id: ID!): Conversation\n    conversations(user_id: ID!, first: Int, after: String): ConversationConnection!\n    messages(conversation_id: ID!, first: Int, after: String): MessageConnection!\n    \n    # Category queries\n    categories: [Category!]!\n    category(id: ID!): Category\n    \n    # Dashboard queries\n    user_dashboard(user_id: ID!): UserDashboard!\n    admin_dashboard: AdminDashboard! # Requires admin role\n    \n    # Notification queries\n    notifications(user_id: ID!, unread_only: Boolean, first: Int, after: String): NotificationConnection!\n    \n    # Favorite queries\n    favorites(user_id: ID!, first: Int, after: String): FavoriteConnection!\n    is_favorited(user_id: ID!, listing_id: ID!): Boolean!\n  }\n\n  # Root Mutation Type\n  type Mutation {\n    # Listing mutations\n    createListing(input: CreateListingInput!): CreateListingResponse!\n    updateListing(id: ID!, input: UpdateListingInput!): CreateListingResponse!\n    deleteListing(id: ID!): MutationResponse!\n    \n    # Booking mutations\n    createBooking(input: CreateBookingInput!): CreateBookingResponse!\n    cancelBooking(id: ID!, reason: String): MutationResponse!\n    confirmBooking(id: ID!): MutationResponse!\n    confirmPickup(id: ID!, notes: String, images: [String!]): MutationResponse!\n    confirmReturn(id: ID!, notes: String, images: [String!], condition: String): MutationResponse!\n    \n    # Review mutations\n    createReview(input: CreateReviewInput!): CreateReviewResponse!\n    \n    # Message mutations\n    sendMessage(input: SendMessageInput!): SendMessageResponse!\n    markMessageAsRead(id: ID!): MutationResponse!\n    markConversationAsRead(id: ID!): MutationResponse!\n    \n    # Profile mutations\n    updateProfile(input: UpdateProfileInput!): UpdateProfileResponse!\n    \n    # Favorite mutations\n    addToFavorites(listing_id: ID!): MutationResponse!\n    removeFromFavorites(listing_id: ID!): MutationResponse!\n    \n    # Notification mutations\n    markNotificationAsRead(id: ID!): MutationResponse!\n    markAllNotificationsAsRead: MutationResponse!\n    \n    # Admin mutations\n    approveListing(id: ID!): MutationResponse!\n    rejectListing(id: ID!, reason: String!): MutationResponse!\n    adminReleasePayment(booking_id: ID!): MutationResponse!\n  }\n\n  # Root Subscription Type\n  type Subscription {\n    # Message subscriptions\n    messageAdded(conversation_id: ID!): Message!\n    conversationUpdated(user_id: ID!): Conversation!\n    \n    # Booking subscriptions\n    bookingStatusChanged(user_id: ID!): Booking!\n    \n    # Notification subscriptions\n    notificationAdded(user_id: ID!): Notification!\n    \n    # Listing subscriptions\n    listingUpdated(listing_id: ID!): Listing!\n  }\n";
